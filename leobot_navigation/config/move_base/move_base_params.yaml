# Move base node parameters. 

# Determines whether or not to shutdown the costmaps of the node when
# move_base is in an inactive state
#shutdown_costmaps: false

# The rate in Hz at which to run the control loop and send velocity
# commands to the base.
controller_frequency: 5.0

# How long the controller will wait in seconds without receiving a
# valid control before space-clearing operations are performed.
#controller_patience: 15.0

# The rate in Hz at which to run the global planning loop. If the
# frequency is set to 0.0, the global planner will only run when a new
# goal is received or the local planner reports that its path is
# blocked.
planner_frequency: 2.0

# How long the planner will wait in seconds in an attempt to find a
# valid plan before space-clearing operations are performed.
#planner_patience: 5.0

# How long in seconds to allow for oscillation before executing
# recovery behaviors. A value of 0.0 corresponds to an infinite
# timeout.
#oscillation_timeout: 10.0

# How far in meters the robot must move to be considered not to be
# oscillating. Moving this far resets the timer counting up to the
# ~oscillation_timeout 
#oscillation_distance: 0.2

# A list of recovery behavior plugins to use with move_base. These behaviors will be run when move_base fails to find a valid plan in the order that they are specified.
# After each behavior completes, move_base will attempt to make a plan. If planning is successful, move_base will continue normal operation. Otherwise, the next recovery behavior in the list will be executed
#recovery_behaviors: [{name: conservative_reset, type: clear_costmap_recovery/ClearCostmapRecovery}, {name: rotate_recovery, type: rotate_recovery/RotateRecovery}, {name: aggressive_reset, type: clear_costmap_recovery/ClearCostmapRecovery}] 

# The distance away from the robot in meters beyond which obstacles will be cleared from the costmap when attempting to clear space in the map. Note, this parameter is only used when the default recovery behaviors are used for move_base.
#conservative_reset_dist: 3.0

# Whether or not to enable the move_base recovery behaviors to attempt to clear out space.
#recovery_behavior_enabled: true

# Determines whether or not to shutdown the costmaps of the node when move_base is in an inactive state
#shutdown_costmaps: false

# How many times to allow for planning retries before executing recovery behaviors. A value of -1.0 corresponds to an infinite retries.
#max_planning_retries: -1
